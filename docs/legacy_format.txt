# AASA Format Changes: WWDC 2019 "What's New in Universal Links"

## Legacy Format (Pre-iOS 13)

### JSON Structure:
```json
{
  "applinks": {
    "apps": [],
    "details": [
      {
        "appID": "TEAMID.BUNDLEID",
        "paths": ["/path/*", "NOT /excluded/*"]
      }
    ]
  }
}
```

### Characteristics:
- Required empty `apps` array
- Used `paths` key for URL pattern matching
- Limited to path-based matching only
- Simple wildcard support with NOT exclusions

## New Format (iOS 13+ from WWDC 2019)

### Enhanced JSON Structure:
```json
{
  "applinks": {
    "details": [
      {
        "appIDs": ["TEAMID.BUNDLEID1", "TEAMID.BUNDLEID2"],
        "components": [
          {
            "/": "/path/*",
            "?": {"param": "value*"},
            "#": "fragment"
          }
        ],
        "exclude": true
      }
    ]
  }
}
```

## Key Changes Introduced at WWDC 2019:

### 1. Removal of `apps` Key
- **Legacy**: Required empty `apps: []` array
- **New**: `apps` key removed for iOS 13+, tvOS 13+, macOS 10.15+
- **Backward Compatibility**: Keep empty `apps` array for earlier OS versions

### 2. `paths` â†’ `components`
- **Legacy**: `"paths": ["/path/*", "NOT /excluded/*"]`
- **New**: `"components"` key replaces `paths`
- **Enhancement**: More granular URL component matching

### 3. Multiple App Support
- **Legacy**: `"appID": "single.app.id"`
- **New**: `"appIDs": ["app1.id", "app2.id"]` (plural)
- **Benefit**: Target multiple apps with same configuration

### 4. Enhanced URL Component Matching

#### Path Component (`/`):
```json
{
  "/": "/specific/path/*"
}
```

#### Query Component (`?`):
- Simple pattern: `"?": "param=value*"`
- Dictionary format:
```json
{
  "?": {
    "param1": "value*",
    "param2": "*"
  }
}
```

#### Fragment Component (`#`):
```json
{
  "#": "section*"
}
```

### 5. Exclude Functionality
- **New**: `"exclude": true` key
- **Purpose**: Prevent specific URL patterns from being handled as universal links
- **Use Case**: Block certain sections of your site from app opening

## Query Component Enhancements:

### Pattern Matching:
- Supports wildcard patterns in query values
- Handles repeated query parameter names
- Treats parameters with no value as empty string

### Example:
```json
{
  "components": [
    {
      "/": "/product/*",
      "?": {
        "category": "electronics*",
        "sale": "*"
      }
    }
  ]
}
```
Matches: `/product/phone?category=electronics&sale=true`

## Migration Path:

### For iOS 13+ Only:
```json
{
  "applinks": {
    "details": [
      {
        "appIDs": ["TEAM.BUNDLE"],
        "components": [
          {
            "/": "/path/*"
          }
        ]
      }
    ]
  }
}
```

### For Backward Compatibility:
```json
{
  "applinks": {
    "apps": [],
    "details": [
      {
        "appID": "TEAM.BUNDLE",
        "paths": ["/path/*"],
        "components": [
          {
            "/": "/path/*"
          }
        ]
      }
    ]
  }
}
```

## Benefits of New Format:

1. **More Precise Matching**: Can match specific query parameters and fragments
2. **Multiple App Support**: Single configuration for multiple apps
3. **Better Exclusions**: More granular control over what URLs to handle
4. **Cleaner Structure**: Removal of required empty `apps` array
5. **Enhanced Debugging**: Better error reporting and validation